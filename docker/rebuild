#!/usr/bin/env bash
cd $(dirname $0)

set -ex

function dockerize {
    sed -i s/:latest/:$2/ ../dist-docker/${3}Dockerfile
    sudo docker build -t kayess/$1:$2 ../dist-docker/$3
    sudo docker push kayess/$1:$2
}

for RELEASE in precise trusty vivid; do
    # Make sure we have the latest source image
    for IMAGE in fost-runtime fost-builder; do
        sudo docker pull kayess/$IMAGE:$RELEASE
    done

    # Compile the code
    rm -rf ../dist-docker Boost/bjam Boost/1_59_0/bjam
    mkdir -p ../tmp/$RELEASE/bin.v2 ../tmp/$RELEASE/boost
    sudo docker run -u $(id -u):$(id -g)  -v $(pwd)/..:/src \
        -v $(pwd)../tmp/$RELEASE/bin.v2:/src/Boost/1_59_0/bin.v2 \
        -v $(pwd)../tmp/$RELEASE/boost:/src/Boost/boost \
        -it kayess/fost-builder:$RELEASE \
            Boost/build 59 0 && Boost/install 59 0 && \
                fost-build docker/compile toolset=gcc release
    strip ../dist-docker/bin/* ../dist-docker/lib/*

    # Build base beanbag runtime
    dockerize beanbag $RELEASE

    # Build and push the example images
    for BUILD in gtf; do
        dockerize beanbag-$BUILD $RELEASE docker/$BUILD/
    done
done

for IMAGE in beanbag beanbag-gtf; do
    sudo docker tag -f kayess/$IMAGE:$RELEASE kayess/$IMAGE:latest
    sudo docker push kayess/$IMAGE:latest
done
