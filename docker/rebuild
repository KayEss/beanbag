#!/usr/bin/env bash
cd $(dirname $0)

set -ex

function dockerize {
    sed -i s/:latest/:$2/ ../dist-docker/${3}Dockerfile
    sudo docker build -t kayess/$1:$2 ../dist-docker/$3
    sudo docker push kayess/$1:$2
}

for RELEASE in precise trusty wily xenial; do
    # Make sure we have the latest source image
    for IMAGE in fost-runtime fost-builder; do
        sudo docker pull kayess/$IMAGE:$RELEASE
    done

    # Get our Boost stuff in line
    rm -rf ../dist-docker
    mkdir -p ../tmp/$RELEASE
    if test -e ../tmp/$RELEASE/Boost
    then {
        pushd ../tmp/$RELEASE/Boost
        git pull origin master
    } else {
        git clone git@github.com:KayEss/fost-boost.git ../tmp/$RELEASE/Boost
        pushd ../tmp/$RELEASE/Boost
        ln ../../../../Boost/1_59_0.tar.bz2
        tar xf 1_59_0.tar.bz2
        mv boost_1_59_0 1_59_0
    }
    fi
    git submodule init
    git submodule sync --recursive
    git submodule update --init --recursive
    popd

    # Compile the code
    sudo docker run -u $(id -u):$(id -g)  -v $(pwd)/..:/src \
        -v $(pwd)/../tmp/$RELEASE/Boost:/src/Boost/ \
        -it --rm=true kayess/fost-builder:$RELEASE \
            bash -c -- "Boost/build 59 0 && Boost/install 59 0 && \
                PREFIX=/src/dist-docker docker/compile toolset=gcc release"
    strip ../dist-docker/bin/* ../dist-docker/lib/*

    # Build base beanbag runtime
    dockerize beanbag $RELEASE

    # Build and push the example images
    for BUILD in gtf; do
        dockerize beanbag-$BUILD $RELEASE docker/$BUILD/
    done
done

for IMAGE in beanbag beanbag-gtf; do
    sudo docker tag -f kayess/$IMAGE:$RELEASE kayess/$IMAGE:latest
    sudo docker push kayess/$IMAGE:latest
done
